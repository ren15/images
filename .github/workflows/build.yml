name: ci

on: push

env:
  IMAGE_REGISTRY: "ghcr.io"
  REGISTRY_USER: "${{ github.repository_owner }}"
  REGISTRY_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  IMAGE_REPO: "ghcr.io/${{ github.repository_owner }}"

jobs:
  build_docker_image:
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        image_subdir:
          [
            "archlinux",
            "cpp_centos7",
            "clang14",
            "gitlab-runner",
            "rust_centos7",
            "ubuntu_gui",
            "ubuntu_kasm",
          ]

    steps:
      - uses: actions/checkout@v3

      - name: Login docker
        run: |
          echo ${{ env.REGISTRY_TOKEN }} | docker login ${{ env.IMAGE_REGISTRY }} -u ${{ env.REGISTRY_USER }} --password-stdin

      - name: configure name
        run: |
          version=$(jq -r .version docker_build/${{ matrix.image_subdir }}/metadata.json)
          image_full_name=${{ env.IMAGE_REPO }}/${{ matrix.image_subdir }}:${version}
          echo "image_full_name=$image_full_name" >> $GITHUB_ENV
          echo ${image_full_name}

      - name: build image
        run: |
          [ -f docker_build/${{ matrix.image_subdir }}/pre.sh  ] && bash docker_build/${{ matrix.image_subdir }}/pre.sh
          docker build -t ${{ env.image_full_name }} docker_build/${{ matrix.image_subdir }}

      - name: Push docker image
        run: |
          docker push ${{ env.image_full_name }}
          docker manifest inspect ${{ env.image_full_name }} \
            | jq '[.layers[] | .size] | add' | awk '{print "image size:",$1/1024/1024,"MB"}'

      - name: Test image
        run: |
          bash docker_build/${{ matrix.image_subdir }}/test.sh ${{ env.image_full_name }}

  copy_image:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Login skopeo and copy images
        run: |
          echo ${{ secrets.GH_PAT }} | sudo skopeo login ghcr.io -u iamwrm --password-stdin
          echo ${{ secrets.RH_PASSWORD }} | sudo skopeo login registry.redhat.io -u iamwrm --password-stdin
          sudo bash scripts/copy_images.sh
